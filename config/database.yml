# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: storage/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: storage/test.sqlite3


# Store production database in PostgreSQL server
production:
  primary:
    adapter: postgresql
    host: 10.10.2.102
    port: 5432
    database: crystal_plates_production
    username: <%= Rails.application.credentials.dig(:postgres, :username) %>
    password: <%= Rails.application.credentials.dig(:postgres, :password) %>
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  cache:
    adapter: postgresql
    host: 10.10.2.102
    port: 5432
    database: crystal_plates_production_cache
    username: <%= Rails.application.credentials.dig(:postgres, :username) %>
    password: <%= Rails.application.credentials.dig(:postgres, :password) %>
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    migrations_paths: db/cache_migrate
  queue:
    adapter: postgresql
    host: 10.10.2.102
    port: 5432
    database: crystal_plates_production_queue
    username: <%= Rails.application.credentials.dig(:postgres, :username) %>
    password: <%= Rails.application.credentials.dig(:postgres, :password) %>
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    migrations_paths: db/queue_migrate
  cable:
    adapter: postgresql
    host: 10.10.2.102
    port: 5432
    database: crystal_plates_production_cable
    username: <%= Rails.application.credentials.dig(:postgres, :username) %>
    password: <%= Rails.application.credentials.dig(:postgres, :password) %>
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    migrations_paths: db/cable_migrate
