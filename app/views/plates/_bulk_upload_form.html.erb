<div class="row mb-4">
  <div class="col-12">
    <div class="card shadow-sm">
      <div class="card-header p-2">
        <div class="d-flex align-items-center w-100">
          <button class="btn btn-link p-0 text-decoration-none d-flex align-items-center flex-grow-1" 
                  type="button" 
                  data-bs-toggle="collapse" 
                  data-bs-target="#bulkUploadCollapse" 
                  aria-expanded="false" 
                  aria-controls="bulkUploadCollapse">
            <i class="bi bi-upload me-2 text-muted"></i>
            <span class="text-muted">Bulk Upload Well Contents</span>
            <i class="fas fa-chevron-down ms-auto text-muted"></i>
          </button>
          <%= link_to download_contents_csv_plate_path(@plate, format: :csv), 
                      class: "btn btn-outline-primary btn-sm ms-2",
                      title: "Download current well contents as CSV" do %>
            <i class="bi bi-download me-1"></i>Download CSV
          <% end %>
        </div>
      </div>
      <div class="collapse" id="bulkUploadCollapse">
        <div class="card-body">
          <p class="text-muted small mb-3">
            Upload a CSV file to bulk populate well contents with chemicals or stock solutions.
            <strong>Uses dual header format:</strong> First row for chemical barcodes, second row for stock solution IDs.
            <br>First column always contains well labels (A1, B2, etc.). Empty cells or 0 values will be skipped.
            <a href="#" class="text-decoration-none" data-bs-toggle="collapse" data-bs-target="#csvFormatExample">
              <small>(Show format example)</small>
            </a>
          </p>
          
          <div class="collapse" id="csvFormatExample">
            <div class="alert alert-info small mb-3">
              <strong>CSV Format (Chemicals + Stock Solutions):</strong><br>
              <code>
                Chemical Barcode,CHEM001,CHEM002,,<br>
                Stock Solution ID,,,123,124<br>
                A1,5,10,50,25<br>
                A2,0,15,0,30<br>
                B1,8,0,30,0
              </code>
              <br><small class="text-muted">
                Row 1: Chemical barcodes (amounts in mg)<br>
                Row 2: Stock solution IDs (volumes in ÂµL)<br>
                Each column can have either a chemical OR stock solution, not both<br>
                Use the Download CSV button to get the correct format with your current plate contents
              </small>
            </div>
          </div>

        <%= form_with url: bulk_upload_contents_plate_path(@plate), method: :post, 
                      local: true, multipart: true, class: "d-flex align-items-end gap-3", 
                      id: "bulkUploadForm" do |f| %>
          <div class="flex-grow-1">
            <%= f.file_field :csv_file, accept: ".csv", class: "form-control", required: true, 
                             id: "csvFileInput" %>
            <div class="form-text">
              <small class="text-muted">Maximum file size: 10MB. Only CSV files are allowed.</small>
            </div>
          </div>
          <div>
            <%= f.submit "Upload CSV", class: "btn btn-primary", id: "uploadButton",
                         data: { confirm: "This will update well contents. Existing contents for the same chemicals or stock solutions will be overwritten. Continue?" } %>
          </div>
        <% end %>
        
        <div id="uploadProgress" class="mt-2 d-none">
          <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 100%">
              Processing...
            </div>
          </div>
        </div>
      </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('bulkUploadForm');
  const fileInput = document.getElementById('csvFileInput');
  const uploadButton = document.getElementById('uploadButton');
  const progressDiv = document.getElementById('uploadProgress');
  
  // File validation
  fileInput.addEventListener('change', function() {
    const file = this.files[0];
    if (!file) return;
    
    // Check file size (10MB limit)
    if (file.size > 10 * 1024 * 1024) {
      alert('File size must be less than 10MB');
      this.value = '';
      return;
    }
    
    // Check file type
    if (!file.name.toLowerCase().endsWith('.csv')) {
      alert('Please select a CSV file');
      this.value = '';
      return;
    }
    
    uploadButton.disabled = false;
  });
  
  // Form submission
  form.addEventListener('submit', function() {
    uploadButton.disabled = true;
    uploadButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Uploading...';
    progressDiv.classList.remove('d-none');
  });
});
</script>
