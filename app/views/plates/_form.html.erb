<%= form_with(model: plate, local: true) do |form| %>
  <% if plate.errors.any? %>
    <div class="alert alert-danger">
      <h4><%= pluralize(plate.errors.count, "error") %> prevented this plate from being saved:</h4>
      <ul>
        <% plate.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-3">
    <%= form.label :barcode, class: "form-label" %>
    <%= form.text_field :barcode, class: "form-control", autofocus: true, 
                        placeholder: "Enter barcode (leave blank to auto-generate)" %>
    <div class="form-text">Leave blank to automatically generate a unique barcode</div>
  </div>

  <div class="mb-4">
    <label class="form-label fw-bold">Plate Dimensions</label>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-4">
            <label for="plate_rows" class="form-label">Number of Rows</label>
            <input type="number" class="form-control" id="plate_rows" name="plate_rows" min="1" max="26" value="8">
            <div class="form-text">Rows (A-Z, typically 8 or 16)</div>
          </div>
          <div class="col-md-4">
            <label for="plate_columns" class="form-label">Number of Columns</label>
            <input type="number" class="form-control" id="plate_columns" name="plate_columns" min="1" max="48" value="12">
            <div class="form-text">Columns (1-48, typically 12 or 24)</div>
          </div>
          <div class="col-md-4">
            <label for="plate_subwells_per_well" class="form-label">Subwells per Well</label>
            <input type="number" class="form-control" id="plate_subwells_per_well" name="plate_subwells_per_well" min="1" max="16" value="1">
            <div class="form-text">Number of subwells (typically 1, 4, or 16)</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="mb-4">
    <label class="form-label fw-bold">Location</label>
    
    <% 
      current_location = plate.current_location || @preselected_location
      is_carousel = current_location&.carousel_position.present? && current_location&.hotel_position.present?
      is_other = current_location&.name.present? || (current_location.nil? && !is_carousel)
    %>
    
    <!-- Radio buttons to choose location type -->
    <div class="card mb-3">
      <div class="card-body">
        <div class="row">
          <div class="col-md-6">
            <div class="form-check">
              <input class="form-check-input" type="radio" name="location_type" id="carousel_location" value="carousel" <%= is_carousel ? 'checked' : '' %>>
              <label class="form-check-label fw-semibold" for="carousel_location">
                <i class="bi bi-grid-3x3-gap me-2"></i>Carousel Position
              </label>
            </div>
          </div>
          <div class="col-md-6">
            <div class="form-check">
              <input class="form-check-input" type="radio" name="location_type" id="special_location" value="special" <%= is_other ? 'checked' : '' %>>
              <label class="form-check-label fw-semibold" for="special_location">
                <i class="bi bi-geo-alt me-2"></i>Special Location
              </label>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Carousel position fields -->
    <div id="carousel_fields" class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-6">
            <label for="carousel_position" class="form-label">Carousel Position</label>
            <input type="number" class="form-control" id="carousel_position" name="carousel_position" min="1" value="<%= current_location&.carousel_position || 1 %>">
            <div class="form-text">Select carousel position</div>
          </div>
          <div class="col-md-6">
            <label for="hotel_position" class="form-label">Hotel Position</label>
            <input type="number" class="form-control" id="hotel_position" name="hotel_position" min="1" value="<%= current_location&.hotel_position || 1 %>">
            <div class="form-text">Select hotel position</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Special location dropdown -->
    <div id="special_fields" class="card <%= is_other ? '' : 'd-none' %>">
      <div class="card-body">
        <label for="special_location_id" class="form-label">Select Location</label>
        <select class="form-select" id="special_location_id" name="special_location_id">
          <option value="">Select a location...</option>
          <% Location.where(carousel_position: nil, hotel_position: nil).each do |location| %>
            <option value="<%= location.id %>" <%= current_location&.id == location.id ? 'selected' : '' %>><%= location.display_name %></option>
          <% end %>
        </select>
        <div class="form-text">Select from available special locations</div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const carouselRadio = document.getElementById('carousel_location');
      const specialRadio = document.getElementById('special_location');
      const carouselFields = document.getElementById('carousel_fields');
      const specialFields = document.getElementById('special_fields');
      const carouselInputs = carouselFields.querySelectorAll('input');
      const specialInputs = specialFields.querySelectorAll('select');
      
      function toggleFields() {
        if (carouselRadio.checked) {
          carouselFields.classList.remove('d-none');
          specialFields.classList.add('d-none');
          
          // Enable carousel inputs and disable special inputs
          carouselInputs.forEach(input => input.disabled = false);
          specialInputs.forEach(input => input.disabled = true);
        } else {
          // Default to special location (either explicitly checked or as fallback)
          carouselFields.classList.add('d-none');
          specialFields.classList.remove('d-none');
          
          // If neither is checked, select special location
          if (!specialRadio.checked) {
            specialRadio.checked = true;
          }
          
          // Disable carousel inputs and enable special inputs
          carouselInputs.forEach(input => input.disabled = true);
          specialInputs.forEach(input => input.disabled = false);
        }
      }
      
      carouselRadio.addEventListener('change', toggleFields);
      specialRadio.addEventListener('change', toggleFields);
      
      // Initialize on page load
      toggleFields();
    });
  </script>

  <div>
    <%= form.submit class: "btn btn-primary" %>
  </div>
<% end %>
